---
import { Icon } from 'astro-icon/components';
import Badge from '../components/Badge.astro';
import ContentWithToc from '../components/ContentWithToc.astro';
import Link from '../components/Link.astro';
import {
  type Project,
  getSinceUntilText,
  old_projects,
  projects,
  scrap_projects,
} from '../data/projects';
import Layout from './Layout.astro';

/* プロジェクトの詳細ページで用いるレイアウト */
interface Props {
  frontmatter: {
    // プロジェクトの名前。src/data/projects.ts に定義されているものと一致させる
    name: string;
    no_toc?: boolean;
  };
}

const { frontmatter } = Astro.props;
function findProject(name: string): Project | undefined {
  let pj = projects.find((pj) => pj.name === name);
  if (pj) {
    return pj;
  }
  pj = old_projects.find((pj) => pj.name === name);
  if (pj) {
    return pj;
  }
  pj = scrap_projects.find((pj) => pj.name === name);
  return pj;
}
const pj = findProject(frontmatter.name);
---

<Layout title={frontmatter.name}>
  <div>
    <h1>{frontmatter.name}</h1>
    <span>
      {pj?.technologies?.map(t => 
        <Badge t={t} />
      )}
    </span>
  </div>
  <div>
  {pj?.repo && <Link url={pj.repo}><Icon name="simple-icons:github" size="1em"/> GitHub</Link>}
    {(pj?.since || pj?.until) && <><Icon name="carbon:calendar" />{getSinceUntilText(pj?.since, pj?.until)}</>}
  </div>
  {pj?.releases && <details>
    <summary>更新履歴</summary>
    <ul>
      {pj.releases.map(r =>
      <li>{r.date} - {r.version}</li>
      )}
    </ul>
  </details>}
  <hr/>
  {
  frontmatter.no_toc ? 
  <slot /> :
  <ContentWithToc>
    <slot />
  </ContentWithToc>
  }
</Layout>

<style>
h1 {
  display: inline;
  padding-right: 1rem;
}
</style>
